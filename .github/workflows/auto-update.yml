name: Auto-update FRC packages

on:
  schedule:
    # Run daily at 6 AM EST (11 AM UTC)
    - cron: "0 11 * * *"
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  update-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Check for package updates
        id: check-updates
        run: |
          echo "Checking for package updates..."

          # Run the update tool and capture output
          if nix run .#frc-nix-update -- --dry-run > update_output.txt 2>&1; then
            echo "Update check completed successfully"
          else
            echo "Update check failed"
            cat update_output.txt
            exit 1
          fi

          # Check if any packages need updates
          if grep -q "All packages are up to date" update_output.txt; then
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No package updates available"
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Package updates available"
          fi

          # Extract updated packages for PR description
          if grep -q "Updated packages:" update_output.txt; then
            updated_packages=$(grep "Updated packages:" update_output.txt | sed 's/==> Updated packages: //')
            echo "updated_packages=$updated_packages" >> $GITHUB_OUTPUT
          fi

      - name: Apply package updates
        if: steps.check-updates.outputs.has_updates == 'true'
        run: |
          echo "Applying package updates..."

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Run the actual update (without dry-run)
          nix run .#frc-nix-update

          # Verify the updates worked
          echo "Verifying updates with nix flake check..."
          if ! nix flake check --no-build; then
            echo "❌ Flake check failed after updates"
            exit 1
          fi

          echo "✅ Updates applied and verified successfully"

      - name: Create Pull Request
        if: steps.check-updates.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: update FRC packages

            Auto-updated packages: ${{ steps.check-updates.outputs.updated_packages }}

            🤖 Generated with frc-nix-update
            Co-Authored-By: 🤖 GitHub Actions <action@github.com>
          title: "chore: auto-update FRC packages"
          body: |
            ## 🤖 Automated Package Updates

            This PR contains automatic updates for FRC packages to their latest versions.

            ### Updated Packages
            ${{ steps.check-updates.outputs.updated_packages }}

            ### Changes Made
            - ✅ Updated package versions to latest releases
            - ✅ Updated package hashes for new versions
            - ✅ Formatted all modified files with `nix fmt`
            - ✅ Verified updates with `nix flake check`

            ### Testing
            The updates have been automatically verified to ensure:
            - All packages build successfully
            - Hash integrity is maintained
            - Nix expressions are valid

            ### Review Notes
            Please review the version changes and test any critical packages before merging.

            ---
            🤖 Generated by [frc-nix-update](https://github.com/frc4451/frc-nix) on $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          branch: auto-update-packages
          delete-branch: true
          draft: false
          reviewers: |
            # Add maintainer usernames here:
            taciturnaxolotl

      - name: Upload update log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: update-log
          path: update_output.txt
          retention-days: 7
